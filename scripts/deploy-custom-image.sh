#!/bin/bash
# Script pour d√©ployer l'image personnalis√©e Triton Demo dans OpenShift AI

set -e

echo "üöÄ D√©ploiement de l'image personnalis√©e Triton Demo"
echo "=================================================="

# Variables
NAMESPACE_RHOAI="redhat-ods-applications"
NAMESPACE_TRITON="triton-demo"
IMAGE_NAME="triton-demo-notebook"
IMAGE_URL="quay.io/mouachan/triton-demo-notebook:latest"

# Fonctions utilitaires
check_command() {
    if ! command -v $1 &> /dev/null; then
        echo "‚ùå $1 n'est pas install√©"
        exit 1
    fi
}

wait_for_rollout() {
    local resource=$1
    local namespace=$2
    echo "‚è≥ Attente du d√©ploiement de $resource dans $namespace..."
    kubectl rollout status $resource -n $namespace --timeout=300s
}

# V√©rification des pr√©requis
echo "üîç V√©rification des pr√©requis..."
check_command kubectl
check_command oc

# V√©rification de la connexion au cluster
if ! kubectl cluster-info &> /dev/null; then
    echo "‚ùå Pas de connexion au cluster OpenShift"
    echo "üí° Connectez-vous avec: oc login"
    exit 1
fi

echo "‚úÖ Connect√© au cluster OpenShift"

# 1. D√©ploiement de l'image personnalis√©e
echo ""
echo "üì¶ √âtape 1: D√©ploiement de l'ImageStream personnalis√©e"
echo "----------------------------------------------------"

# Appliquer la configuration RHOAI avec les custom images
kubectl apply -k /Users/mouchan/projects/openshift-ai-setup/components/instances/rhoai-instance/components/custom-notebook-images/

# V√©rifier que l'ImageStream est cr√©√©e
echo "‚è≥ V√©rification de l'ImageStream..."
kubectl get imagestream $IMAGE_NAME -n $NAMESPACE_RHOAI || {
    echo "‚ö†Ô∏è ImageStream pas encore cr√©√©e, application directe..."
    kubectl apply -f /Users/mouchan/projects/openshift-ai-setup/components/instances/rhoai-instance/components/custom-notebook-images/triton-demo-imagestream.yaml
}

# Attendre que l'image soit import√©e
echo "‚è≥ Import de l'image depuis Quay.io..."
sleep 10

# Forcer l'import si n√©cessaire
kubectl import-image $IMAGE_NAME:latest --from=$IMAGE_URL -n $NAMESPACE_RHOAI --confirm || echo "‚ö†Ô∏è Import manuel √©chou√©, continuons..."

# 2. V√©rification de l'image dans OpenShift AI
echo ""
echo "üîç √âtape 2: V√©rification de l'image dans OpenShift AI"
echo "---------------------------------------------------"

# V√©rifier les labels pour OpenShift AI
kubectl get imagestream $IMAGE_NAME -n $NAMESPACE_RHOAI -o jsonpath='{.metadata.labels}' | grep -q "opendatahub.io/notebook-image" && {
    echo "‚úÖ ImageStream correctement label√©e pour OpenShift AI"
} || {
    echo "‚ö†Ô∏è Ajout du label OpenShift AI..."
    kubectl label imagestream $IMAGE_NAME -n $NAMESPACE_RHOAI opendatahub.io/notebook-image=true --overwrite
}

# 3. Mise √† jour du workbench pour utiliser l'image personnalis√©e
echo ""
echo "üîß √âtape 3: Mise √† jour du workbench Triton Demo"
echo "----------------------------------------------"

# Appliquer la configuration du workbench
kubectl apply -k /Users/mouchan/projects/openshift-ai-setup/components/instances/triton-demo-instance/base/data-science-project/

# V√©rifier le namespace triton-demo
kubectl get namespace $NAMESPACE_TRITON || {
    echo "üìÅ Cr√©ation du namespace $NAMESPACE_TRITON..."
    kubectl create namespace $NAMESPACE_TRITON
}

# 4. Red√©marrage du workbench pour utiliser la nouvelle image
echo ""
echo "üîÑ √âtape 4: Red√©marrage du workbench"
echo "---------------------------------"

# Supprimer le pod du workbench pour forcer le red√©marrage
kubectl delete pod -l app=triton-workbench -n $NAMESPACE_TRITON --ignore-not-found=true

echo "‚è≥ Attente du nouveau pod..."
sleep 15

# V√©rifier le statut du workbench
kubectl get pods -l app=triton-workbench -n $NAMESPACE_TRITON && {
    echo "‚úÖ Workbench red√©marr√© avec succ√®s"
} || {
    echo "‚ö†Ô∏è Workbench en cours de cr√©ation..."
}

# 5. Affichage des informations finales
echo ""
echo "üéâ D√©ploiement termin√©!"
echo "====================="
echo ""
echo "üìã R√©sum√©:"
echo "   üñºÔ∏è  Image: $IMAGE_URL"
echo "   üì¶ ImageStream: $IMAGE_NAME dans $NAMESPACE_RHOAI"
echo "   üîß Workbench: triton-workbench dans $NAMESPACE_TRITON"
echo ""
echo "üåê Pour acc√©der:"
echo "   1. Dashboard OpenShift AI ‚Üí Data Science Projects"
echo "   2. Projet 'triton-demo'"
echo "   3. L'image '$IMAGE_NAME' devrait appara√Ætre dans les choix"
echo ""
echo "‚ö° Temps de d√©marrage attendu: 30-60 secondes (au lieu de 8-12 minutes)"
echo ""
echo "üîç V√©rifications:"
echo "   kubectl get imagestream $IMAGE_NAME -n $NAMESPACE_RHOAI"
echo "   kubectl get pods -n $NAMESPACE_TRITON"
echo "   kubectl logs -l app=triton-workbench -n $NAMESPACE_TRITON"