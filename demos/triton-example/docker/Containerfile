# Triton Demo Optimized Notebook Image - Containerfile pour Podman
# Base: UBI9 Python 3.11
# Target: quay.io/mouachan/triton-demo-notebook:latest

FROM registry.redhat.io/ubi9/python-311:latest

LABEL name="triton-demo-notebook" \
      version="1.0.0" \
      description="Optimized notebook image for Triton inference demos with pre-installed ML packages" \
      maintainer="mouachan" \
      vendor="OpenShift AI Demo" \
      io.k8s.description="Notebook image with Triton, KFP, and ML packages pre-installed" \
      io.openshift.expose-services="8888:http"

USER root

# Mise à jour du système et installation des outils nécessaires
RUN dnf update -y && \
    dnf install -y \
        curl \
        wget \
        git \
        nodejs \
        npm \
        gcc \
        gcc-c++ \
        make && \
    dnf clean all && \
    rm -rf /var/cache/dnf

USER 1001

# Configuration de l'environnement Python
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PATH="/opt/app-root/src/.local/bin:${PATH}"

# Mise à jour de pip et des outils de base
RUN python -m pip install --user --upgrade pip setuptools wheel

# Installation de Jupyter et Elyra d'abord
RUN pip install --user --no-cache-dir \
    "jupyter>=1.0.0" \
    "jupyterlab>=4.0.0" \
    "notebook>=7.0.0" \
    "elyra>=3.15.0"

# Couche 1: Packages de base pour éviter les conflits
RUN pip install --user --no-cache-dir \
    "urllib3>=1.26.2,<2.0" \
    "requests>=2.31.0" \
    "certifi>=2023.0.0" \
    "six>=1.16.0"

# Couche 2: Packages scientifiques de base
RUN pip install --user --no-cache-dir \
    "numpy>=1.24.0,<2.0" \
    "pandas>=2.0.0,<3.0" \
    "scipy>=1.10.0" \
    "matplotlib>=3.7.0,<4.0" \
    "seaborn>=0.12.0,<1.0"

# Couche 3: Machine Learning
RUN pip install --user --no-cache-dir \
    "scikit-learn>=1.3.0,<2.0"

# Couche 4: Cloud et stockage
RUN pip install --user --no-cache-dir \
    "boto3>=1.28.0,<2.0" \
    "minio>=7.1.0,<8.0" \
    "pyyaml>=6.0,<7.0" \
    "click>=8.1.0,<9.0"

# Couche 5: Kubeflow Pipelines
RUN pip install --user --no-cache-dir \
    "kfp>=2.0.0,<3.0" \
    "kubernetes>=27.0.0,<29.0"

# Couche 6: Triton (optionnel, peut échouer)
RUN pip install --user --no-cache-dir \
    "tritonclient[http]>=2.30.0,<3.0" || \
    echo "⚠️ Triton client installation failed, continuing..."

# Configuration des répertoires pour Jupyter et Elyra
RUN mkdir -p /opt/app-root/src/.jupyter && \
    mkdir -p /opt/app-root/src/.local/share/jupyter/metadata/runtimes && \
    mkdir -p /opt/app-root/src/.local/share/jupyter/metadata/component-catalogs && \
    mkdir -p /opt/app-root/src/.local/share/jupyter/metadata/code-snippets

# Configuration Jupyter de base
RUN echo 'c.ServerApp.ip = "0.0.0.0"' > /opt/app-root/src/.jupyter/jupyter_lab_config.py && \
    echo 'c.ServerApp.port = 8888' >> /opt/app-root/src/.jupyter/jupyter_lab_config.py && \
    echo 'c.ServerApp.open_browser = False' >> /opt/app-root/src/.jupyter/jupyter_lab_config.py && \
    echo 'c.ServerApp.allow_root = True' >> /opt/app-root/src/.jupyter/jupyter_lab_config.py && \
    echo 'c.ServerApp.token = ""' >> /opt/app-root/src/.jupyter/jupyter_lab_config.py && \
    echo 'c.ServerApp.password = ""' >> /opt/app-root/src/.jupyter/jupyter_lab_config.py

# Répertoire de travail
WORKDIR /opt/app-root/src

# Configuration des variables d'environnement pour OpenShift AI
ENV JUPYTER_ENABLE_LAB=yes \
    JUPYTER_CONFIG_DIR=/opt/app-root/src/.jupyter \
    ELYRA_ENABLE_SCRIPT_EXECUTION=True

# Test basique des imports
RUN python -c "import jupyter, elyra, numpy, pandas, sklearn, matplotlib, boto3, kfp; print('✅ Core packages OK')" || \
    echo "⚠️ Some packages failed to import, but continuing..."

# Port d'exposition
EXPOSE 8888

# Point d'entrée
CMD ["jupyter", "lab", "--config=/opt/app-root/src/.jupyter/jupyter_lab_config.py"]