#!/bin/bash

# Script de build optimisÃ© pour l'image alignÃ©e sur le standard
# Build rapide et push automatique

set -e

echo "ðŸš€ Build optimisÃ© de l'image Triton Demo Notebook v4.0"

# Configuration
IMAGE_NAME="triton-demo-notebook"
TAG="latest"
REGISTRY="quay.io/mouachan"
FULL_IMAGE="${REGISTRY}/${IMAGE_NAME}:${TAG}"

# Build optimisÃ©
echo "ðŸ“¦ Build de l'image..."
podman build \
    --tag="${FULL_IMAGE}" \
    --file=Containerfile \
    --format=docker \
    --progress=plain \
    .

# Test rapide de l'image
echo "ðŸ§ª Test rapide de l'image..."
podman run --rm "${FULL_IMAGE}" python -c "
import jupyter, jupyterlab, elyra, numpy, pandas, sklearn, matplotlib, kfp
print('âœ… Tous les packages principaux sont installÃ©s')
print(f'JupyterLab: {jupyterlab.__version__}')
print(f'Elyra: {elyra.__version__}')
print(f'KFP: {kfp.__version__}')
print(f'NumPy: {numpy.__version__}')
print(f'Pandas: {pandas.__version__}')
print(f'Scikit-learn: {sklearn.__version__}')
"

# Push automatique
echo "ðŸ“¤ Push de l'image..."
podman push "${FULL_IMAGE}"

echo "âœ… Build et push terminÃ©s avec succÃ¨s!"
echo "ðŸ”„ Image disponible: ${FULL_IMAGE}"
echo "ðŸ’¡ Pour dÃ©ployer: kubectl rollout restart deployment/triton-workbench -n triton-demo"
