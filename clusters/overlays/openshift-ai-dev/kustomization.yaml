# OpenShift AI Development Cluster
# Déploiement GitOps pour OpenShift AI 2.22 avec Service Mesh et Serverless
# Restructuré avec l'approche "une feature = un répertoire" (RH AI Services BU pattern)
# 
# Utilisation:
# kubectl apply -k clusters/overlays/openshift-ai-dev

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

metadata:
  name: openshift-ai-dev
  annotations:
    argocd.argoproj.io/sync-wave: "0"

resources:
  # Opérateurs (sync-wave: "0") - Doit être en premier
  - ../../../components/operators

  # Infrastructure de base (sync-wave: "1") - MinIO et MySQL
  - ../../../components/instances/minio-instance/base
  - ../../../components/instances/mysql-instance/base

  # Composants OpenShift (sync-wave: "2") - Serverless et Pipelines
  - ../../../components/instances/serverless-instance
  - ../../../components/instances/pipelines-instance

  # RHOAI et ses composants (sync-wave: "3") - OpenShift AI complet
  - ../../../components/instances/rhoai-instance/base

  # Démo Triton (sync-wave: "5") - Doit être en dernier, après RHOAI
  - ../../../components/instances/triton-demo-instance/base


# Apply these patches to customize for dev environment
patches:
  - path: dev-patches.yaml
    target:
      kind: Kustomization

# Labels to apply to all resources
labels:
  - pairs:
      app.kubernetes.io/name: openshift-ai
      app.kubernetes.io/version: "2.22"
      app.kubernetes.io/managed-by: kustomize
      environment: development