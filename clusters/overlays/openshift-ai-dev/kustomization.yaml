# OpenShift AI Development Cluster
# Déploiement GitOps pour OpenShift AI 2.22 avec Service Mesh et Serverless
# Restructuré avec l'approche "une feature = un répertoire" (RH AI Services BU pattern)
# 
# Utilisation:
# kubectl apply -k clusters/overlays/openshift-ai-dev

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

metadata:
  name: openshift-ai-dev
  
# Base resources
resources:
  # Operators first (order matters) - includes Jaeger dependency
  - ../../../components/operators/
  
  # Model Catalog Enabler (Technology Preview)
  - ../../../components/instances/model-catalog-enabler/base
  
  # Instances after operators are ready
  # Service Mesh géré automatiquement par RHOAI
  - ../../../components/instances/serverless-instance
  - ../../../components/instances/pipelines-instance  # ✅ Réactivé pour la démo
  - ../../../components/instances/rhoai-instance      # ✅ Inclut maintenant Model Registry consolidé
  
  # Demo instances (after infrastructure is ready)
  - ../../../components/instances/triton-demo-instance/base  # ✅ Démo Triton intégrée


# Apply these patches to customize for dev environment
patchesStrategicMerge:
  - dev-patches.yaml

# Labels to apply to all resources
commonLabels:
  app.kubernetes.io/name: openshift-ai
  app.kubernetes.io/version: "2.22"
  app.kubernetes.io/managed-by: kustomize
  environment: development