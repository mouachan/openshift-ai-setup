# Makefile pour OpenShift AI 2.22 - Pure GitOps avec ArgoCD

.PHONY: help deploy status verify clean

# Configuration
CURRENT_USER := $(shell oc whoami 2>/dev/null || echo "unknown")

help: ## Afficher l'aide
	@echo "üöÄ OpenShift AI 2.22 - Pure GitOps avec ArgoCD"
	@echo ""
	@echo "Commandes disponibles:"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'
	@echo ""
	@echo "Utilisateur connect√©: $(CURRENT_USER)"

deploy: ## üöÄ D√©ployer OpenShift AI via ArgoCD
	@echo "üöÄ D√©ploiement OpenShift AI 2.22 via GitOps"
	@echo "Repository: https://github.com/mouachan/openshift-ai-setup.git"
	@echo ""
	@echo "1Ô∏è‚É£ Installation GitOps (si n√©cessaire)..."
	@oc apply -f components/operators/openshift-gitops-operator/base/subscription.yaml || true
	@echo "‚è≥ Attente GitOps (30s)..."
	@sleep 30
	@echo ""
	@echo "2Ô∏è‚É£ D√©ploiement Application ArgoCD..."
	@oc apply -f argocd/openshift-ai-application.yaml
	@echo ""
	@echo "‚úÖ Application ArgoCD cr√©√©e !"
	@echo "üåê ArgoCD: https://$$(oc get route argocd-server -n openshift-gitops -o jsonpath='{.spec.host}' 2>/dev/null || echo 'en-cours-installation')"
	@echo ""
	@echo "üìã Monitoring: make status"

status: ## üìä V√©rifier le statut du d√©ploiement
	@echo "=== Status OpenShift AI GitOps ==="
	@echo ""
	@echo "üéØ Applications ArgoCD:"
	@oc get applications -n openshift-gitops 2>/dev/null || echo "GitOps en cours d'installation"
	@echo ""
	@echo "üîß Operators:"
	@oc get csv -n openshift-operators | grep -E "(rhods|servicemesh|serverless|pipelines|gitops)" || echo "En cours d'installation..."
	@echo ""
	@echo "üéØ OpenShift AI:"
	@oc get dsc,dsci -o wide 2>/dev/null || echo "En cours d'installation..."
	@echo ""
	@echo "üåê URLs:"
	@echo "  ArgoCD: https://$$(oc get route argocd-server -n openshift-gitops -o jsonpath='{.spec.host}' 2>/dev/null || echo 'installation-en-cours')"
	@echo "  OpenShift AI: https://$$(oc get route rhods-dashboard -n redhat-ods-applications -o jsonpath='{.spec.host}' 2>/dev/null || echo 'installation-en-cours')"

verify: ## ‚úÖ V√©rifier que tout fonctionne
	@echo "=== V√©rification GitOps ==="
	@echo ""
	@echo "üîç Applications ArgoCD:"
	@oc get applications -n openshift-gitops --no-headers | awk '{print "  " $$1 " - " $$3 " - " $$4}' || echo "  Aucune application"
	@echo ""
	@echo "üîç Pods OpenShift AI:"
	@oc get pods -n redhat-ods-applications --no-headers | wc -l | awk '{print "  " $$1 " pods actifs"}' 2>/dev/null || echo "  Namespace non cr√©√©"
	@echo ""
	@echo "üîç Service Mesh:"
	@oc get smcp -n istio-system --no-headers | wc -l | awk '{print "  " $$1 " control plane(s)"}' 2>/dev/null || echo "  Non install√©"
	@echo ""
	@echo "üîç Knative:"
	@oc get knativeserving -n knative-serving --no-headers | wc -l | awk '{print "  " $$1 " instance(s)"}' 2>/dev/null || echo "  Non install√©"

clean: ## üßπ Supprimer l'application ArgoCD (garde les op√©rateurs)
	@echo "üßπ Suppression de l'application ArgoCD..."
	@oc delete application openshift-ai-main -n openshift-gitops 2>/dev/null || echo "Application d√©j√† supprim√©e"
	@echo "‚úÖ Application supprim√©e. Les op√©rateurs restent install√©s."