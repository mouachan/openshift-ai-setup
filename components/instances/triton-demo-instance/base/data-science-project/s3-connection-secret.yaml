apiVersion: v1
kind: Secret
metadata:
  name: triton-demo-s3-connection
  namespace: triton-demo
  labels:
    app.kubernetes.io/name: triton-demo-s3-connection
    app.kubernetes.io/component: data-connection
    app.kubernetes.io/part-of: openshift-ai-demo
    app.kubernetes.io/managed-by: gitops
    demo.openshift.ai/type: triton-inference
  annotations:
    openshift.io/display-name: "Triton Demo - S3 Connection"
    openshift.io/description: "Connexion S3 vers MinIO pour la démo Triton"
    opendatahub.io/connection-type: "s3"
type: Opaque
data:
  # Access Key (encodé en base64)
  accessKey: bWluaW8=
  # Secret Key (encodé en base64)
  secretKey: bWluaW8xMjM=
  # Endpoint (encodé en base64)
  endpoint: bWluaW8tdHJpdG9uLWRlbW8tcGlwZWxpbmVzLnRyaXRvbi1kZW1vLnN2Yy5jbHVzdGVyLmxvY2FsOjkwMDA=
  # Bucket (encodé en base64)
  bucket: bWxwaXBlbGluZQ==
  # Region (encodé en base64)
  region: dXMtZWFzdC0x
  # Protocol (encodé en base64)
  protocol: aHR0cA==
  # Port (encodé en base64)
  port: OTAwMA==
  # Path (encodé en base64)
  path: Lw==
  # SSL (encodé en base64) - false
  ssl: ZmFsc2U=
  # Path Style (encodé en base64) - true
  pathStyle: dHJ1ZQ== 