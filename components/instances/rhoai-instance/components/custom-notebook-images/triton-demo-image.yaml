---
# Configuration pour ajouter l'image Triton Demo aux images de workbench OpenShift AI
apiVersion: v1
kind: ConfigMap
metadata:
  name: triton-demo-notebook-image
  namespace: redhat-ods-applications
  labels:
    app.kubernetes.io/name: triton-demo-notebook-image
    app.kubernetes.io/component: notebook-image
    app.kubernetes.io/part-of: openshift-ai-demo
    app.kubernetes.io/managed-by: gitops
    opendatahub.io/notebook-image: "true"
  annotations:
    openshift.io/display-name: "Triton Demo Notebook"
    openshift.io/description: "Image optimisée pour les démos d'inférence Triton avec packages ML pré-installés"
data:
  # Configuration de l'image pour le dashboard OpenShift AI
  imagestream.yaml: |
    apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: triton-demo-notebook
      namespace: redhat-ods-applications
      labels:
        opendatahub.io/notebook-image: "true"
        app.kubernetes.io/name: triton-demo-notebook
      annotations:
        openshift.io/display-name: "Triton Demo Notebook"
        openshift.io/description: "Image optimisée pour les démos d'inférence Triton"
    spec:
      lookupPolicy:
        local: true
      tags:
        - name: "latest"
          annotations:
            opendatahub.io/notebook-software: '[{"name":"Python","version":"3.11"}]'
            opendatahub.io/notebook-python-dependencies: '[
              {"name":"TensorFlow","version":"2.13+"},
              {"name":"PyTorch","version":"2.0+"},
              {"name":"Scikit-learn","version":"1.3+"},
              {"name":"Pandas","version":"2.0+"},
              {"name":"NumPy","version":"1.24+"},
              {"name":"Matplotlib","version":"3.7+"},
              {"name":"Seaborn","version":"0.12+"},
              {"name":"Kubeflow Pipelines","version":"2.0+"},
              {"name":"Triton Client","version":"2.30+"},
              {"name":"Model Registry","version":"0.1+"},
              {"name":"Boto3","version":"1.28+"},
              {"name":"MinIO","version":"7.1+"},
              {"name":"Elyra","version":"3.15+"}
            ]'
            openshift.io/imported-from: "quay.io/mouachan/triton-demo-notebook:latest"
          from:
            kind: DockerImage
            name: "quay.io/mouachan/triton-demo-notebook:latest"
          importPolicy:
            scheduled: true
          referencePolicy:
            type: Source

---
# BuidConfig pour rebuilder l'image automatiquement si nécessaire
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: triton-demo-notebook-build
  namespace: redhat-ods-applications
  labels:
    app.kubernetes.io/name: triton-demo-notebook-build
    app.kubernetes.io/component: notebook-image
    app.kubernetes.io/part-of: openshift-ai-demo
    app.kubernetes.io/managed-by: gitops
  annotations:
    openshift.io/display-name: "Triton Demo Notebook Build"
spec:
  output:
    to:
      kind: ImageStreamTag
      name: triton-demo-notebook:latest
  source:
    type: Git
    git:
      uri: "https://github.com/mouachan/openshift-ai-setup.git"
      ref: "main"
    contextDir: "demos/triton-example/docker"
  strategy:
    type: Docker
    dockerStrategy:
      dockerfilePath: Dockerfile
  triggers:
    - type: ConfigChange
    - type: GitHub
      github:
        secret: github-webhook-secret
    - type: Generic
      generic:
        secret: generic-webhook-secret